version: '3.8'

services:
  nginx:
    image: nginx:alpine
    container_name: ecommerce_nginx
    volumes:
      - ./src/ecommerce:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    depends_on:
      - php
      - frontend
    networks:
      - ecommerce_network

  frontend:
    build:
      context: ./src/front
      dockerfile: ../../docker/frontend/Dockerfile
    container_name: ecommerce_front
    volumes:
      - ./src/front:/app
      - /app/node_modules
    environment:
      VITE_API_URL: ${VITE_API_URL}
    ports:
      - "5173:5173"
    networks:
      - ecommerce_network
    stdin_open: true
    tty: true

  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: ecommerce_php
    volumes:
      - ./src/ecommerce:/var/www/html
    networks:
      - ecommerce_network
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      localstack:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "php-fpm", "-t"]
      interval: 10s
      timeout: 5s
      retries: 5

  mysql:
    image: mysql:8.4
    container_name: ecommerce_mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DB}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - ecommerce_network
    command: --innodb-use-native-aio=0
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 10s
      start_period: 30s
      retries: 15

  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: ecommerce_rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_DEFAULT_VHOST}
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - ecommerce_network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 10s
      start_period: 30s
      retries: 15

  localstack:
    image: localstack/localstack:3.0
    container_name: ecommerce_localstack
    environment:
      SERVICES: ${SERVICE_1},${SERVICE_2}
      DEBUG: ${DEBUG}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
    ports:
      - "4566:4566"
    volumes:
      - localstack_data:/var/lib/localstack
    networks:
      - ecommerce_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/health"]
      interval: 10s
      timeout: 10s
      start_period: 30s
      retries: 15

volumes:
  mysql_data:
  rabbitmq_data:
  localstack_data:

networks:
  ecommerce_network:
    driver: bridge